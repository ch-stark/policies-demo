apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-kafka-config
  namespace: default
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kafka-config1
        spec:
          remediationAction: inform
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: kafka.strimzi.io/v1beta1
                kind: Kafka
                metadata:
                  name: my-cluster
                spec:
                  kafka:
                    version: 2.6.0
                    replicas: 1
                    resources:
                      requests:
                        memory: 4Gi
                        cpu: '1'
                      limits:
                        memory: 4Gi
                        cpu: '2'
                      jvmOptions:
                        '-Xms': 3276m
                        '-Xmx': 3276m
                    listeners:
                      - name: tls
                        port: 9093
                        tls: true
                        type: internal
                    config:
                      auto.create.topics.enable: 'true'
                      offsets.topic.replication.factor: 1
                      transaction.state.log.replication.factor: 1
                      transaction.state.log.min.isr: 1
                      log.message.format.version: '2.6'
                      log.retention.hours: 1
                    storage:
                      type: persistent-claim
                      size: 2Gi
                      class: standard
                      deleteClaim: false
                    logging:
                      type: inline
                      loggers:
                        kafka.root.logger.level: INFO
                  zookeeper:
                    replicas: 1
                    storage:
                      type: persistent-claim
                      size: 2Gi
                      class: standard
                      deleteClaim: false
                    resources:
                      requests:
                        memory: 2Gi
                        cpu: '1'
                      limits:
                        memory: 2Gi
                        cpu: '1.5'
                    logging:
                      type: inline
                      loggers:
                        zookeeper.root.logger: INFO
                  entityOperator:
                    topicOperator: {}
                    userOperator: {}


    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kafka-topics
        spec:
          remediationAction: inform
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: kafka.strimzi.io/v1beta1
                kind: KafkaTopic
                metadata:
                  name: receive-topic
                  labels:
                    strimzi.io/cluster: my-cluster
                spec:
                  partitions: 3
                  replicas: 1
                  config:
                    retention.ms: 7200000
                    segment.bytes: 1073741824
            - complianceType: musthave
              objectDefinition:
                apiVersion: kafka.strimzi.io/v1beta1
                kind: KafkaTopic
                metadata:
                  name: app-topic
                  labels:
                    strimzi.io/cluster: my-cluster
                spec:
                  partitions: 3
                  replicas: 1
                  config:
                    retention.ms: 7200000
                    segment.bytes: 1073741824
            - complianceType: musthave
              objectDefinition:
                apiVersion: kafka.strimzi.io/v1beta1
                kind: KafkaTopic
                metadata:
                  name: infra-topic
                  labels:
                    strimzi.io/cluster: my-cluster
                spec:
                  partitions: 3
                  replicas: 1
                  config:
                    retention.ms: 7200000
                    segment.bytes: 1073741824
            - complianceType: musthave
              objectDefinition:
                apiVersion: kafka.strimzi.io/v1beta1
                kind: KafkaTopic
                metadata:
                  name: audit-topic
                  labels:
                    strimzi.io/cluster: my-cluster
                spec:
                  partitions: 3
                  replicas: 1
                  config:
                    retention.ms: 7200000
                    segment.bytes: 1073741824                   
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-kafka-config
  namespace: default
placementRef:
  name: placement-kafka-config
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-kafka-config
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-kafka-config
  namespace: default
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-kafka-config
  namespace: default
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: local-cluster, operator: In, values: ["true"]}
