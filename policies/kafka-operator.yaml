apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: policy-kafka-operator-install
  namespace: default
  annotations:
    policy.open-cluster-management.io/standards: NIST-CSF
    policy.open-cluster-management.io/categories: PR.IP Information Protection Processes and Procedures
    policy.open-cluster-management.io/controls: PR.IP-1 Baseline Configuration
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: policy-kafka-operator
        spec:
          remediationAction: enforce
          severity: low
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  name: amq-streams
                  namespace: kafka
                  labels:
                    operators.coreos.com/amq-streams.openshift-operators: ''
                spec:
                  channel: stable
                  installPlanApproval: Automatic
                  name: amq-streams
                  source: redhat-operators
                  sourceNamespace: openshift-marketplace
                  startingCSV: amqstreams.v1.5.3
                
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: binding-kafka-operator-install
  namespace: default
placementRef:
  name: placement-kafka-operator-install
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: policy-kafka-operator-install
  kind: Policy
  apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-kafka-operator-install
  namespace: default
spec:
  clusterConditions:
  - status: "True"
    type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - {key: local-cluster, operator: In, values: ["true"]}
