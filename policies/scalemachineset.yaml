apiVersion: v1
data:
  script-scale.sh: |
    echo "script-one.sh"
    echo { oc version }
    export MACHINESETS=$(oc get machineset -n openshift-machine-api -o json | jq '.items[]|.metadata.name' -r )
    for ms in $MACHINESETS
      do
        oc scale  MACHINESET $ms --replicas=0 -n openshift-machine-api
        oc patch MACHINESET $ms -p='{"spec":{"template":{"spec":{"providerSpec":{"value":{"spotMarketOptions":{"maxPrice":0.52}}}}}}}' --type=merge  -n openshift-machine-api
        oc patch MACHINESET $ms -p='{"spec":{"template":{"spec":{"providerSpec":{"value":{"instanceType":"m5.xlarge"}}}}}}' --type=merge  -n openshift-machine-api
        oc scale  MACHINESET $ms --replicas=1 -n openshift-machine-api
      done  
kind: ConfigMap
metadata:
  name:  scalemachines-scripts

---

apiVersion: batch/v1
kind: Job
metadata:
  name: scalemachines-job
spec:
  parallelism: 1    
  completions: 1    
  template:         
    metadata:
      name: scalemachines-job
    spec:
      volumes:
      - name: scalemachines-scripts-volume
        configMap:
          name: scalemachines-scripts
      serviceAccountName: clusterscaler 
      containers:
      - name: scalemachines-job
        image: quay.io/cstark/fullocclient:latest
        volumeMounts:
          - mountPath: /scalemachines-scripts
            name: scalemachines-scripts-volume
        env:
          - name: HOME
            value: /tmp
        command:
        - /bin/sh
        - -c
        - |
          echo "scripts in /scalemachines-scripts"
          ls -lh /scalemachines-scripts
          echo "copy scripts to /tmp"
          cp /scalemachines-scripts/*.sh /tmp
          echo "apply 'chmod +x' to /tmp/*.sh"
          chmod +x /tmp/*.sh
          echo "execute script sh now"
          /tmp/script-scale.sh
      restartPolicy: Never
